name: Build Flutter Android APK

on:
  push:
    branches:
      - master
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get Flutter dependencies
        run: flutter pub get

      # 新增：清理 Flutter 和 Gradle 缓存
      - name: Clean Flutter and Gradle cache
        run: |
          flutter clean
          cd android
          chmod +x gradlew
          ./gradlew clean
          cd ..

      # 重新运行 flutter pub get 以生成被清理的文件
      - name: Get Flutter dependencies again
        run: flutter pub get

      # Add step to check network connection before building
      - name: Check network connection to Gradle distributions
        run: curl -v https://services.gradle.org/distributions/gradle-8.7-bin.zip -o /dev/null

      # Build the Android release APK by directly calling Gradle Wrapper
      - name: Build APK
        working-directory: ./android # Change working directory to android
        run: |
          chmod +x gradlew
          ./gradlew assembleRelease

      # 新增：列出 APK 输出目录内容以调试路径
      - name: List Build Output Directory
        run: ls -R android/app/build/outputs/
        # 这个命令在工作空间根目录运行，所以路径是相对根目录的

      # Upload the generated APK file as an artifact
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          # Path relative to the android directory, then up one level for workspace root
          path: android/app/build/outputs/apk/release/app-release.apk