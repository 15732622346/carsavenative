name: Build Flutter Android APK

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Prepare isar_flutter_libs files
        run: |
          # 查找所有isar_flutter_libs目录
          for D in $(find $HOME/.pub-cache -name "isar_flutter_libs*" -type d | grep -v "src")
          do
            echo "Found isar directory: $D"
            
            # 创建Android相关目录
            mkdir -p $D/android/src/main
            
            # 创建AndroidManifest.xml
            echo '<manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.isar.flutter"></manifest>' > $D/android/src/main/AndroidManifest.xml
            
            # 创建build.gradle文件内容
            echo 'group "com.isar.flutter"' > $D/android/build.gradle
            echo 'version "1.0"' >> $D/android/build.gradle
            echo '' >> $D/android/build.gradle
            echo 'buildscript {' >> $D/android/build.gradle
            echo '    repositories {' >> $D/android/build.gradle
            echo '        google()' >> $D/android/build.gradle
            echo '        mavenCentral()' >> $D/android/build.gradle
            echo '    }' >> $D/android/build.gradle
            echo '' >> $D/android/build.gradle
            echo '    dependencies {' >> $D/android/build.gradle
            echo '        classpath "com.android.tools.build:gradle:7.3.0"' >> $D/android/build.gradle
            echo '    }' >> $D/android/build.gradle
            echo '}' >> $D/android/build.gradle
            echo '' >> $D/android/build.gradle
            echo 'rootProject.allprojects {' >> $D/android/build.gradle
            echo '    repositories {' >> $D/android/build.gradle
            echo '        google()' >> $D/android/build.gradle
            echo '        mavenCentral()' >> $D/android/build.gradle
            echo '    }' >> $D/android/build.gradle
            echo '}' >> $D/android/build.gradle
            echo '' >> $D/android/build.gradle
            echo 'apply plugin: "com.android.library"' >> $D/android/build.gradle
            echo '' >> $D/android/build.gradle
            echo 'android {' >> $D/android/build.gradle
            echo '    namespace "com.isar.flutter"' >> $D/android/build.gradle
            echo '    compileSdkVersion 34' >> $D/android/build.gradle
            echo '    ' >> $D/android/build.gradle
            echo '    defaultConfig {' >> $D/android/build.gradle
            echo '        minSdkVersion 23' >> $D/android/build.gradle
            echo '        targetSdkVersion 34' >> $D/android/build.gradle
            echo '    }' >> $D/android/build.gradle
            echo '    ' >> $D/android/build.gradle
            echo '    compileOptions {' >> $D/android/build.gradle
            echo '        sourceCompatibility JavaVersion.VERSION_1_8' >> $D/android/build.gradle
            echo '        targetCompatibility JavaVersion.VERSION_1_8' >> $D/android/build.gradle
            echo '    }' >> $D/android/build.gradle
            echo '}' >> $D/android/build.gradle
            
            echo "Patched build files for: $D"
          done

      - name: Build APK
        run: |
          cd android
          chmod +x gradlew
          ./gradlew assembleRelease

      - name: Create debug directory for debugging
        run: |
          mkdir -p debug_info
          cp -r android/app/build/outputs debug_info/ || echo "No outputs directory"
          find $HOME/.pub-cache -name "isar*" > debug_info/isar_paths.txt
          ls -la android/app/build/ > debug_info/build_dir.txt || echo "No build directory"
          echo "GRADLE FILES" > debug_info/gradle_files.txt
          find android -name "*.gradle" >> debug_info/gradle_files.txt

      - name: Upload debug info
        uses: actions/upload-artifact@v4
        with:
          name: debug-info
          path: debug_info/
          
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: android/app/build/outputs/apk/release/app-release.apk