name: Build Flutter Android APK

on:
  push:
    branches:
      - master
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Patch isar_flutter_libs
        run: |
          # 查找所有isar_flutter_libs目录
          for D in $(find $HOME/.pub-cache -name "isar_flutter_libs*" -type d | grep -v "src")
          do
            echo "Found isar directory: $D"
            
            # 创建Android相关目录
            mkdir -p $D/android/src/main
            
            # 创建AndroidManifest.xml
            cat > $D/android/src/main/AndroidManifest.xml << 'EOF'
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.isar.flutter">
</manifest>
EOF
            
            # 创建或替换build.gradle
            cat > $D/android/build.gradle << 'EOF'
group 'com.isar.flutter'
version '1.0'

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.0'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'

android {
    namespace 'com.isar.flutter'
    compileSdkVersion 34
    
    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 34
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
EOF
            echo "Patched build files for: $D"
          done

      - name: Build APK
        run: |
          cd android
          chmod +x gradlew
          ./gradlew assembleRelease

      - name: Create debug directory for debugging
        run: |
          mkdir -p debug_info
          cp -r android/app/build/outputs debug_info/ || echo "No outputs directory"
          find $HOME/.pub-cache -name "isar*" > debug_info/isar_paths.txt
          ls -la android/app/build/ > debug_info/build_dir.txt || echo "No build directory"
          echo "======== GRADLE FILES ========" > debug_info/gradle_files.txt
          find android -name "*.gradle" >> debug_info/gradle_files.txt

      - name: Upload debug info
        uses: actions/upload-artifact@v4
        with:
          name: debug-info
          path: debug_info/
          
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: android/app/build/outputs/apk/release/app-release.apk